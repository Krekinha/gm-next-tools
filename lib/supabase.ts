import { createClient } from '@supabase/supabase-js'

// Configura√ß√µes do Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!

// Cliente Supabase para uso no cliente (browser)
export const supabase = createClient(supabaseUrl, supabaseAnonKey)

// Cliente Supabase para uso no servidor (com service role key)
export const supabaseAdmin = createClient(supabaseUrl, process.env.SUPABASE_SERVICE_ROLE_KEY!, {
  auth: {
    autoRefreshToken: false,
    persistSession: false,
  },
})

// Fun√ß√£o para testar conex√£o
export async function testSupabaseConnection() {
  try {
    console.log('üîÑ Testando conex√£o com Supabase...')

    // Teste b√°sico de conex√£o
    const { data, error } = await supabase.from('users').select('count').limit(1)

    if (error) {
      console.log('‚ö†Ô∏è  Tabela users n√£o existe ainda. Isso √© normal para primeira configura√ß√£o.')
      return { success: true, message: 'Conex√£o estabelecida, mas tabelas ainda n√£o foram criadas' }
    }

    console.log('‚úÖ Conex√£o com Supabase estabelecida com sucesso!')
    return { success: true, message: 'Conex√£o estabelecida e tabelas encontradas' }
  } catch (error) {
    console.error('‚ùå Erro ao conectar com Supabase:', error)
    return { success: false, message: 'Erro na conex√£o' }
  }
}
